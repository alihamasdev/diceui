{
  "name": "combobox-custom-filter-demo",
  "type": "registry:example",
  "dependencies": [
    "@diceui/combobox",
    "lucide-react"
  ],
  "registryDependencies": [
    "combobox"
  ],
  "files": [
    {
      "path": "example/combobox-custom-filter-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport {\r\n  Combobox,\r\n  ComboboxAnchor,\r\n  ComboboxContent,\r\n  ComboboxEmpty,\r\n  ComboboxInput,\r\n  ComboboxItem,\r\n  ComboboxLabel,\r\n  ComboboxTrigger,\r\n} from \"@/registry/default/ui/combobox\";\r\nimport { ChevronDown } from \"lucide-react\";\r\nimport { matchSorter } from \"match-sorter\";\r\nimport * as React from \"react\";\r\n\r\nconst tricks = [\r\n  { label: \"Kickflip\", value: \"kickflip\" },\r\n  { label: \"Heelflip\", value: \"heelflip\" },\r\n  { label: \"Tre Flip\", value: \"tre-flip\" },\r\n  { label: \"FS 540\", value: \"fs-540\" },\r\n  { label: \"Casper flip 360 flip\", value: \"casper-flip-360-flip\" },\r\n  { label: \"Kickflip Backflip\", value: \"kickflip-backflip\" },\r\n  { label: \"360 Varial McTwist\", value: \"360-varial-mc-twist\" },\r\n  { label: \"The 900\", value: \"the-900\" },\r\n];\r\n\r\nexport default function ComboboxCustomFilterDemo() {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  function onFilter(options: string[], inputValue: string) {\r\n    const trickOptions = tricks.filter((trick) =>\r\n      options.includes(trick.value),\r\n    );\r\n    return matchSorter(trickOptions, inputValue, {\r\n      keys: [\"label\", \"value\"],\r\n      threshold: matchSorter.rankings.MATCHES,\r\n    }).map((trick) => trick.value);\r\n  }\r\n\r\n  return (\r\n    <Combobox value={value} onValueChange={setValue} onFilter={onFilter}>\r\n      <ComboboxLabel>Trick</ComboboxLabel>\r\n      <ComboboxAnchor>\r\n        <ComboboxInput placeholder=\"Select trick...\" />\r\n        <ComboboxTrigger>\r\n          <ChevronDown className=\"h-4 w-4\" />\r\n        </ComboboxTrigger>\r\n      </ComboboxAnchor>\r\n      <ComboboxContent>\r\n        <ComboboxEmpty>No tricks found.</ComboboxEmpty>\r\n        {tricks.map((trick) => (\r\n          <ComboboxItem key={trick.value} value={trick.value}>\r\n            {trick.label}\r\n          </ComboboxItem>\r\n        ))}\r\n      </ComboboxContent>\r\n    </Combobox>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}