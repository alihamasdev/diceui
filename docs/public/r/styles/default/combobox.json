{
  "name": "combobox",
  "type": "registry:ui",
  "dependencies": [
    "@diceui/combobox"
  ],
  "files": [
    {
      "path": "ui/combobox.tsx",
      "content": "\"use client\";\n\nimport * as ComboboxPrimitive from \"@diceui/combobox\";\nimport { Check, ChevronDown } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Combobox = ComboboxPrimitive.Root;\n\nconst ComboboxLabel = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Label\n    ref={ref}\n    className={cn(\"px-0.5 py-1.5 font-semibold text-sm\", className)}\n    {...props}\n  />\n));\nComboboxLabel.displayName = ComboboxPrimitive.Label.displayName;\n\nconst ComboboxAnchor = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Anchor>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Anchor>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Anchor\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent shadow-sm focus:ring-1 focus:ring-ring\",\n      className,\n    )}\n    {...props}\n  />\n));\nComboboxAnchor.displayName = ComboboxPrimitive.Anchor.displayName;\n\nconst ComboboxInput = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Input\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full rounded-md bg-transparent px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  />\n));\nComboboxInput.displayName = ComboboxPrimitive.Input.displayName;\n\nconst ComboboxTrigger = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <ComboboxPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-9 items-center justify-center rounded-r-md border-input bg-transparent text-muted-foreground transition-colors hover:text-foreground/80 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    {children || <ChevronDown className=\"h-4 w-4\" />}\n  </ComboboxPrimitive.Trigger>\n));\nComboboxTrigger.displayName = ComboboxPrimitive.Trigger.displayName;\n\nconst ComboboxCancel = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      \"absolute top-2 right-2 flex h-6 w-6 items-center justify-center rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\",\n      className,\n    )}\n    {...props}\n  />\n));\nComboboxCancel.displayName = ComboboxPrimitive.Cancel.displayName;\n\nconst ComboboxContent = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <ComboboxPrimitive.Portal>\n    <ComboboxPrimitive.Content\n      ref={ref}\n      className=\"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-fit min-w-[var(--dice-anchor-width)] origin-[var(--dice-transform-origin)] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=closed]:animate-out data-[state=open]:animate-in\"\n      {...props}\n    >\n      {children}\n    </ComboboxPrimitive.Content>\n  </ComboboxPrimitive.Portal>\n));\nComboboxContent.displayName = ComboboxPrimitive.Content.displayName;\n\nconst ComboboxEmpty = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Empty>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Empty\n    ref={ref}\n    className={cn(\"py-6 text-center text-sm\", className)}\n    {...props}\n  />\n));\nComboboxEmpty.displayName = ComboboxPrimitive.Empty.displayName;\n\nconst ComboboxGroup = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Group\n    ref={ref}\n    className={cn(\"overflow-hidden\", className)}\n    {...props}\n  />\n));\nComboboxGroup.displayName = ComboboxPrimitive.Group.displayName;\n\nconst ComboboxGroupLabel = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.GroupLabel>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.GroupLabel>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.GroupLabel\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 font-semibold text-muted-foreground text-xs\",\n      className,\n    )}\n    {...props}\n  />\n));\nComboboxGroupLabel.displayName = ComboboxPrimitive.GroupLabel.displayName;\n\nconst ComboboxItem = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Item> & {\n    /**\n     * The side of the item indicator relative to the item text.\n     * @default \"left\"\n     */\n    indicatorSide?: \"left\" | \"right\";\n  }\n>(({ className, children, indicatorSide = \"left\", ...props }, ref) => (\n  <ComboboxPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50\",\n      indicatorSide === \"left\" ? \"pr-2 pl-8\" : \"pr-8 pl-2\",\n      className,\n    )}\n    {...props}\n  >\n    <ComboboxPrimitive.ItemIndicator\n      className={cn(\n        \"absolute flex h-3.5 w-3.5 items-center justify-center\",\n        indicatorSide === \"left\" ? \"left-2\" : \"right-2\",\n      )}\n    >\n      <Check className=\"h-4 w-4\" />\n    </ComboboxPrimitive.ItemIndicator>\n    <ComboboxPrimitive.ItemText>{children}</ComboboxPrimitive.ItemText>\n  </ComboboxPrimitive.Item>\n));\nComboboxItem.displayName = ComboboxPrimitive.Item.displayName;\n\nconst ComboboxSeparator = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nComboboxSeparator.displayName = ComboboxPrimitive.Separator.displayName;\n\nexport {\n  Combobox,\n  ComboboxLabel,\n  ComboboxAnchor,\n  ComboboxInput,\n  ComboboxTrigger,\n  ComboboxCancel,\n  ComboboxContent,\n  ComboboxEmpty,\n  ComboboxGroup,\n  ComboboxGroupLabel,\n  ComboboxItem,\n  ComboboxSeparator,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}