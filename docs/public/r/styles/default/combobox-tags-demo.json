{
  "name": "combobox-tags-demo",
  "type": "registry:example",
  "dependencies": [
    "@diceui/combobox",
    "@diceui/tags-input",
    "lucide-react"
  ],
  "registryDependencies": [
    "combobox",
    "tags-input"
  ],
  "files": [
    {
      "path": "example/combobox-tags-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Combobox,\r\n  ComboboxAnchor,\r\n  ComboboxContent,\r\n  ComboboxEmpty,\r\n  ComboboxGroup,\r\n  ComboboxGroupLabel,\r\n  ComboboxInput,\r\n  ComboboxItem,\r\n} from \"@/registry/default/ui/combobox\";\r\nimport {\r\n  TagsInput,\r\n  TagsInputInput,\r\n  TagsInputItem,\r\n  TagsInputList,\r\n} from \"@/registry/default/ui/tags-input\";\r\nimport { Check, ChevronDown } from \"lucide-react\";\r\nimport * as React from \"react\";\r\n\r\nconst fruits = [\"Apple\", \"Banana\", \"Blueberry\", \"Grapes\", \"Pineapple\"];\r\n\r\nexport default function ComboboxTagsDemo() {\r\n  const [value, setValue] = React.useState<string[]>([]);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const filteredFruits = React.useMemo(() => {\r\n    if (!search) return fruits;\r\n    return fruits.filter((fruit) =>\r\n      fruit.toLowerCase().includes(search.toLowerCase()),\r\n    );\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"w-[400px] mx-auto relative\">\r\n      <Combobox value={value} onValueChange={setValue} multiple>\r\n        <ComboboxAnchor className=\"w-full inline-flex items-center justify-between rounded-lg p-2 text-sm leading-none gap-[5px] bg-background border shadow-sm\">\r\n          <TagsInput value={value} onValueChange={setValue}>\r\n            <TagsInputList className=\"flex gap-2 items-center rounded-lg flex-wrap border-0 p-0 min-h-0\">\r\n              {value.map((item) => (\r\n                <TagsInputItem\r\n                  key={item}\r\n                  value={item}\r\n                  className=\"flex items-center justify-center gap-2 text-white bg-primary hover:bg-primary/90 rounded px-2 py-1\"\r\n                >\r\n                  {item}\r\n                </TagsInputItem>\r\n              ))}\r\n              <ComboboxInput\r\n                asChild\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              >\r\n                <TagsInputInput\r\n                  placeholder=\"Fruits...\"\r\n                  className=\"focus:outline-none flex-1 rounded bg-transparent placeholder:text-muted-foreground px-1\"\r\n                />\r\n              </ComboboxInput>\r\n            </TagsInputList>\r\n          </TagsInput>\r\n          <ChevronDown className=\"h-4 w-4 text-muted-foreground\" />\r\n        </ComboboxAnchor>\r\n        <ComboboxContent className=\"w-[400px]\">\r\n          <ComboboxEmpty className=\"text-muted-foreground text-xs font-medium text-center py-2\">\r\n            No fruits found.\r\n          </ComboboxEmpty>\r\n          <ComboboxGroup>\r\n            <ComboboxGroupLabel>Fruits</ComboboxGroupLabel>\r\n            {filteredFruits.map((fruit) => (\r\n              <ComboboxItem\r\n                key={fruit}\r\n                value={fruit}\r\n                className={cn(\r\n                  \"relative flex items-center px-6 py-1.5\",\r\n                  \"data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground\",\r\n                  \"data-[disabled]:opacity-50 data-[disabled]:pointer-events-none\",\r\n                )}\r\n              >\r\n                <Check className=\"absolute left-1 w-4 h-4 opacity-0 data-[selected]:opacity-100\" />\r\n                {fruit}\r\n              </ComboboxItem>\r\n            ))}\r\n          </ComboboxGroup>\r\n        </ComboboxContent>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}